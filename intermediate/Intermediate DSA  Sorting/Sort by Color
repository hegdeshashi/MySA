Problem Description
Given an array with N objects colored red, white, or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent red, white, and blue, respectively.

Note: Using the library sort function is not allowed.



Problem Constraints
1 <= N <= 1000000
0 <= A[i] <= 2


Input Format
First and only argument of input contains an integer array A.


Output Format
Return an integer array in asked order


Example Input
Input 1 :
    A = [0 1 2 0 1 2]
Input 2:

    A = [0]


Example Output
Output 1:
    [0 0 1 1 2 2]
Output 2:

    [0]


Example Explanation
Explanation 1:
    [0 0 1 1 2 2] is the required order.
    =======================
    import functools
class Solution:
    # @param A : list of integers
    # @return a list of integers
    def sortColors(self, A):
        sorted_arr = sorted(A,key = functools.cmp_to_key(self.comparator)) 
        return sorted_arr

    def comparator(self,num1,num2):
        # we can go with simple starting algorithm as red, bwhite, blue are in normal sorting order such 0,1,2
        if num1 > num2: 
            return 1
        else:
            return -1
