Problem Description
You are given a singly linked list having head node A. You need to print the linked list in reverse order.

Note :- The node values must be space separated. You must give a newline after printing all the nodes.



Problem Constraints
1 <= Length of linked list <= 105

1 <= Value of each linked list node <= 109



Input Format
First and only argument is a linked-list node A.



Output Format
Print the linked list in reverse order



Example Input
Input 1:

 A = 1 -> 2 -> 3 -> 4 -> 5 -> NULL 
Input 2:

 A = 3 -> NULL 


Example Output
Output 1:

 5 4 3 2 1
Output 2:

 3 


Example Explanation
Explanation 1:

 The linked list has 5 nodes. After reversing them, the list becomes : 5 -> 4 -> 3 -> 2 -> 1 -> NULL 
Expalantion 2:

 The linked list consists of only a single node. After reversing it, the list becomes : 3 -> NULL 
 =================
import sys
sys.setrecursionlimit(100000)  # for hard test/condition
# Definition for singly-linked list.
# class ListNode:
#    def __init__(self, x):
#        self.val = x
#        self.next = None

class Solution:
    # @param A : head node of linked list
    def solve(self, A):
        x=A #for safety ,we leave the head value and transfer it to x

        def print_val(x):

            if x==None: # base cond.n
                return # stop the recursion("loop")

            print_val(x.next) # only after calling the funcation stack will be made
            print(x.val,end=" ") # until upper line get executed, this command will be on hold
                                 # which will print nodes from last, then last second..... to first

        print_val(x)
        print() #newline after printing all the nodes.
