Josephus Problem

Problem Description
Given the total number of person A and a number B which indicates that B-1 persons are skipped and the Bth person is killed in a circle. Find the last person standing in the circle.


Problem Constraints
1 <= A <= 104
2 <= B <= A



Input Format
First argument A is an integer.
Second argument B is an integer.


Output Format
Return an integer.


Example Input
Input 1:
A = 4
B = 2
Input 2:
A = 5
B = 3


Example Output
Output 1:
1
Output 2:
4


Example Explanation
For Input 1:
Firstly, the person at position 2 is killed, then the person at position 4 is killed,
then the person at position 3 is killed. So the person at position 1 survives. 
For Input 2:
Firstly, the person at position 3, then the person at position 1 is killed, 
then the person at position 5 is killed. Finally, the person at position 2 is killed. 
So the person at position 4 survives. 

=======
# example A=5,B=3     ===> every 3rd person gets killed, next person starts with index=1
 
# 1st 2nd 3rd 4th 5th --> 3̶r̶d̶  4th 5th 1st 2nd  (y)                 # round 1 or stack 1,A=5
#                               becomes
#                             1st 2nd 3rd 4th (x)

# 1st 2nd 3rd 4th  --> 3̶r̶d̶  4th  1st 2nd  (y)                     # round 2 or stack 2,A=4
#                               becomes
#                             1st 2nd 3rd  (x)    

# 1st 2nd 3rd  --> 3̶r̶d̶   1st 2nd       (y)               # round 3 or stack 3,A=3
#                         becomes
#                        1st 2nd    (x)    



#             derived formula---> y=(x+B)%A   where B==3 and A is A of current stack
#               if y becomes 0 then assign value of A

import sys
sys.setrecursionlimit(500000)

class Solution:
    # @param A : integer
    # @param B : integer
    # @return an integer
    def solve(self, A, B):
        def ans(A,B):
            if A==1:
                return 1
            x=ans(A-1,B)
            y=(x+B)%A
            if y==0:
                y=A
            return y
        return ans(A,B)
