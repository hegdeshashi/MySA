Problem Description
Alex has a cat named Boomer. He decides to put his cat to the test for eternity.

He starts on day 1 with one stash of food unit, every next day, the stash doubles.

If Boomer is well behaved during a particular day, only then she receives food worth equal to the stash produced on that day.

Boomer receives a net worth of A units of food. What is the number of days she received the stash?



Problem Constraints
1 <= A <= 231-1



Input Format
First and only argument is an integer A.



Output Format
Return an integer denoting the number of days Boomer was well behaved.



Example Input
Input 1:

A = 5
Input 2:

A = 8


Example Output
Output 1:

 2
Output 2:

 1


Example Explanation
Explanation 1:

 To eat a total of 5 units of food, Boomer behaved normally on Day 1 and on the Day 3.
Explanation 2:

 To eat a total of 8 units of food, Boomer behaved normally only on day 4.
 =======
 class Solution:
    # @param A : integer
    # @return an integer
    def solve(self, A):
        count=0
        for i in range(32):
            if A>>i&1==1:
                count+=1
        return count    

    # here in example u can see, the number of 1â€™s in the binary representation of A is the number of days he was well behaved.  
   
    # for case of 5 :00...... 101----> day 1 and 3
    # here boomer bahved on day 1 and got food, stash doubled on day 2,
    # but boomer beahved on day 3 ,hence he gets food on day3 which is double of day 2

    # 2 is multiplied each day from day1= 1

    # for case of 8 :00...... 1000-----> day 4
    # on day 4 cat behaved well so first day1 then double 3 times for next days till the value of 8
